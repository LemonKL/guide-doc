<header class="article-header">
<h1 class="article-title">项目结构一览</h1>
</header>
<div class="article-entry">
<blockquote>
<p>本文基于 Dubbo 3.x-dev 版本，望知悉。</p>
</blockquote>
<h1 id="1-概述">1. 概述</h1>
<p>本文主要分享&nbsp;<strong>Dubbo 的项目结构</strong>。<br />希望通过本文能让胖友对 Dubbo 的整体项目有个简单的了解。</p>
<p>另外，笔者会相对大量引用&nbsp;<a href="http://dubbo.apache.org/zh-cn/docs/user/" target="_blank" rel="external nofollow noopener noreferrer">《Dubbo 用户指南》</a>&nbsp;和&nbsp;<a href="http://dubbo.apache.org/zh-cn/docs/dev/" target="_blank" rel="external nofollow noopener noreferrer">《Dubbo 开发指南》</a>&nbsp;，写的真的挺好的。🙂<br />ps：限于排版，部分地方引用会存在未标明的情况。</p>
<p>在拉取 Dubbo 项目后，我们会发现拆分了<strong>好多</strong>&nbsp;Maven 项目。是不是内心一紧，产生了恐惧感？不要方，我们就是继续怼。</p>
<p><img src="http://static2.iocoder.cn/images/Dubbo/2018_01_04/01.png" alt="项目结构" /></p>
<h1 id="2-代码统计">2. 代码统计</h1>
<p>这里先分享一个小技巧。笔者在开始源码学习时，会首先了解项目的代码量。</p>
<p><strong>第一种方式</strong>，使用&nbsp;<a href="https://plugins.jetbrains.com/plugin/4509-statistic" target="_blank" rel="external nofollow noopener noreferrer">IDEA Statistic</a>&nbsp;插件，统计整体代码量。</p>
<p><img src="http://static2.iocoder.cn/images/Dubbo/2018_01_04/02.png" alt="Statistic 统计代码量" /></p>
<p>我们可以粗略的看到，总的代码量在 98210 行。这其中还包括单元测试，示例等等代码。<br />所以，不慌。</p>
<p><strong>第二种方式</strong>，使用&nbsp;<a href="http://blog.csdn.net/yhhwatl/article/details/52623879" target="_blank" rel="external nofollow noopener noreferrer">Shell 脚本命令逐个 Maven 模块统计</a>&nbsp;。</p>
<p>一般情况下，笔者使用&nbsp;<code>find . -name "*.java"|xargs cat|grep -v -e ^$ -e ^\s*\/\/.*$|wc -l</code>&nbsp;。这个命令只过滤了<strong>部分注释</strong>，所以相比&nbsp;<a href="https://plugins.jetbrains.com/plugin/4509-statistic" target="_blank" rel="external nofollow noopener noreferrer">IDEA Statistic</a>&nbsp;会<strong>偏多</strong>。</p>
<p>当然，考虑到准确性，胖友需要手动&nbsp;<code>cd</code>&nbsp;到每个 Maven 项目的&nbsp;<code>src/main/java</code>&nbsp;目录下，以达到排除单元测试的代码量。</p>
<p><img src="http://static2.iocoder.cn/images/Dubbo/2018_01_04/03.png" alt="Shell 脚本统计代码量" /></p>
<h1 id="3-项目一览">3. 项目一览</h1>
<p>如果胖友看过&nbsp;<a href="http://dubbo.apache.org/zh-cn/docs/dev/design.html" target="_blank" rel="external nofollow noopener noreferrer">《Dubbo 框架设计》</a>&nbsp;，就会发现有下面这张图。</p>
<blockquote>
<p><img src="http://static2.iocoder.cn/images/Dubbo/2018_01_04/04.png" alt="模块分包" /></p>
</blockquote>
<p>通过这图，我们可以很清晰的知道几个 Maven 模块的依赖关系。</p>
<h2 id="3-1-dubbo-common">3.1 dubbo-common</h2>
<blockquote>
<p><a href="https://github.com/alibaba/dubbo/tree/4bbc0ddddacc915ddc8ff292dd28745bbc0031fd/dubbo-common" target="_blank" rel="external nofollow noopener noreferrer"><code>dubbo-common</code></a>&nbsp;<strong>公共逻辑模块</strong>：提供工具类和通用模型。</p>
</blockquote>
<p><img src="http://static2.iocoder.cn/images/Dubbo/2018_01_04/05.png" alt="dubbo-common 包结构" /></p>
<p>工具类比较好理解，<strong>通用模型</strong>是什么？举个例子，<a href="https://github.com/alibaba/dubbo/blob/4bbc0ddddacc915ddc8ff292dd28745bbc0031fd/dubbo-common/src/main/java/com/alibaba/dubbo/common/URL.java" target="_blank" rel="external nofollow noopener noreferrer"><code>com.alibaba.dubbo.common.URL</code></a>&nbsp;：</p>
<blockquote>
<p>FROM&nbsp;<a href="http://dubbo.apache.org/zh-cn/docs/dev/contract.html" target="_blank" rel="external nofollow noopener noreferrer">《Dubbo 开发指南 &mdash;&mdash; 公共契约》</a></p>
<ul>
<li>所有扩展点参数都包含 URL 参数，URL 作为上下文信息贯穿整个扩展点设计体系。</li>
<li>URL 采用标准格式：<code>protocol://username:password@host:port/path?key=value&amp;key=value</code>&nbsp;。</li>
</ul>
</blockquote>
<p>那么 URL 有什么用呢？😈 请见后续文章。</p>
<h2 id="3-2-dubbo-remoting">3.2 dubbo-remoting</h2>
<blockquote>
<p><a href="https://github.com/alibaba/dubbo/tree/4bbc0ddddacc915ddc8ff292dd28745bbc0031fd/dubbo-remoting" target="_blank" rel="external nofollow noopener noreferrer"><code>dubbo-remoting</code></a>&nbsp;<strong>远程通信模块</strong>：提供<strong>通用</strong>的客户端和服务端的通讯功能。</p>
</blockquote>
<p><img src="http://static2.iocoder.cn/images/Dubbo/2018_01_04/06.png" alt="dubbo-remoting 包结构" /></p>
<ul>
<li><code>dubbo-remoting-zookeeper</code>&nbsp;，相当于 Zookeeper Client ，和 Zookeeper Server 通信。</li>
<li><code>dubbo-remoting-api</code>&nbsp;， 定义了 Dubbo Client 和 Dubbo Server 的<strong>接口</strong>。</li>
<li><strong>实现</strong>&nbsp;<code>dubbo-remoting-api</code>
<ul>
<li><code>dubbo-remoting-grizzly</code>&nbsp;，基于&nbsp;<a href="https://javaee.github.io/grizzly/" target="_blank" rel="external nofollow noopener noreferrer">Grizzly</a>&nbsp;实现。</li>
<li><code>dubbo-remoting-http</code>&nbsp;，基于&nbsp;<a href="https://www.eclipse.org/jetty/" target="_blank" rel="external nofollow noopener noreferrer">Jetty</a>&nbsp;或&nbsp;<a href="http://tomcat.apache.org/" target="_blank" rel="external nofollow noopener noreferrer">Tomcat</a>&nbsp;实现。</li>
<li><code>dubbo-remoting-mina</code>&nbsp;，基于&nbsp;<a href="https://mina.apache.org/" target="_blank" rel="external nofollow noopener noreferrer">Mina</a>&nbsp;实现。</li>
<li><code>dubbo-remoting-netty</code>&nbsp;，基于&nbsp;<a href="https://netty.io/" target="_blank" rel="external nofollow noopener noreferrer">Netty 3</a>&nbsp;实现。</li>
<li><code>dubbo-remoting-netty4</code>&nbsp;，基于&nbsp;<a href="https://netty.io/" target="_blank" rel="external nofollow noopener noreferrer">Netty 4</a>&nbsp;实现。</li>
<li><code>dubbo-remoting-p2p</code>&nbsp;，P2P 服务器。注册中心&nbsp;<code>dubbo-registry-multicast</code>&nbsp;项目的使用该项目。</li>
</ul>
</li>
</ul>
<p>从<strong>最小化</strong>的角度来看，我们只需要看：</p>
<ul>
<li><code>dubbo-remoting-api</code>&nbsp;+&nbsp;<code>dubbo-remoting-netty4</code></li>
<li><code>dubbo-remoting-zookeeper</code></li>
</ul>
<h2 id="3-3-dubbo-rpc">3.3 dubbo-rpc</h2>
<blockquote>
<p><a href="https://github.com/alibaba/dubbo/tree/4bbc0ddddacc915ddc8ff292dd28745bbc0031fd/dubbo-rpc" target="_blank" rel="external nofollow noopener noreferrer"><code>dubbo-rpc</code></a>&nbsp;<strong>远程调用模块</strong>：抽象各种协议，以及动态代理，只包含一对一的调用，<strong>不关心集群的管理</strong>。</p>
</blockquote>
<ul>
<li>集群相关的管理，由&nbsp;<code>dubbo-cluster</code>&nbsp;提供特性。</li>
</ul>
<p>在回过头看上面的图，我们会发现，<code>dubbo-rpc</code>&nbsp;是整个 Dubbo 的<strong>中心</strong>。</p>
<p><img src="http://static2.iocoder.cn/images/Dubbo/2018_01_04/07.png" alt="dubbo-rpc 包结构" /></p>
<ul>
<li><code>dubbo-rpc-api</code>&nbsp;，<strong>抽象</strong>各种协议以及动态代理，<strong>实现</strong>了一对一的调用。</li>
<li>其他模块，实现&nbsp;<code>dubbo-rpc-api</code>&nbsp;，提供对应的协议实现。在&nbsp;<a href="http://dubbo.apache.org/zh-cn/docs/user/references/protocol/introduction.html" target="_blank" rel="external nofollow noopener noreferrer">《用户指南 &mdash;&mdash; 协议参考手册》</a>&nbsp;中，可以看到每种协议的介绍。</li>
<li>另外，<code>dubbo-rpc-default</code>&nbsp;对应&nbsp;<code>dubbo://</code>&nbsp;协议。</li>
<li>拓展参见&nbsp;<a href="http://dubbo.apache.org/zh-cn/docs/dev/impls/protocol.html" target="_blank" rel="external nofollow noopener noreferrer">《Dubbo 开发指南 &mdash;&mdash; 协议扩展》</a>&nbsp;文档。</li>
</ul>
<p>进一步的拆解，见&nbsp;<a href="http://svip.iocoder.cn/Dubbo/implementation-intro/?self">《精尽 Dubbo 源码分析 &mdash;&mdash; 核心流程一览》</a>&nbsp;文章。</p>
<h2 id="3-4-dubbo-cluster">3.4 dubbo-cluster</h2>
<blockquote>
<p><a href="https://github.com/alibaba/dubbo/tree/4bbc0ddddacc915ddc8ff292dd28745bbc0031fd/dubbo-cluster" target="_blank" rel="external nofollow noopener noreferrer"><code>dubbo-cluster</code></a>&nbsp;<strong>集群模块</strong>：将多个服务提供方伪装为一个提供方，包括：负载均衡, 集群容错，路由，分组聚合等。集群的地址列表可以是静态配置的，也可以是由注册中心下发。</p>
</blockquote>
<ul>
<li>注册中心下发，由&nbsp;<code>dubbo-registry</code>&nbsp;提供特性。</li>
</ul>
<p><img src="http://static2.iocoder.cn/images/Dubbo/2018_01_04/08.png" alt="dubbo-cluster 包结构" /></p>
<ul>
<li>容错
<ul>
<li><a href="https://github.com/alibaba/dubbo/blob/4bbc0ddddacc915ddc8ff292dd28745bbc0031fd/dubbo-cluster/src/main/java/com/alibaba/dubbo/rpc/cluster/Cluster.java" target="_blank" rel="external nofollow noopener noreferrer"><code>com.alibaba.dubbo.rpc.cluster.Cluster</code></a>&nbsp;接口 +&nbsp;<code>com.alibaba.dubbo.rpc.cluster.support</code>包。</li>
<li>Cluster 将 Directory 中的多个 Invoker 伪装成一个 Invoker，对上层透明，伪装过程包含了容错逻辑，调用失败后，重试另一个。</li>
<li>拓展参见&nbsp;<a href="http://dubbo.apache.org/zh-cn/docs/user/demos/fault-tolerent-strategy.html" target="_blank" rel="external nofollow noopener noreferrer">《Dubbo 用户指南 &mdash;&mdash; 集群容错》</a>&nbsp;和&nbsp;<a href="http://dubbo.apache.org/zh-cn/docs/dev/impls/cluster.html" target="_blank" rel="external nofollow noopener noreferrer">《Dubbo 开发指南 &mdash;&mdash; 集群扩展》</a>&nbsp;文档。</li>
</ul>
</li>
<li>目录
<ul>
<li><a href="https://github.com/alibaba/dubbo/blob/4bbc0ddddacc915ddc8ff292dd28745bbc0031fd/dubbo-cluster/src/main/java/com/alibaba/dubbo/rpc/cluster/Directory.java" target="_blank" rel="external nofollow noopener noreferrer"><code>com.alibaba.dubbo.rpc.cluster.Directory</code></a>&nbsp;接口 +&nbsp;<code>com.alibaba.dubbo.rpc.cluster.directory</code>&nbsp;包。</li>
<li>Directory 代表了多个 Invoker ，可以把它看成 List&nbsp;，但与 List 不同的是，它的值可能是动态变化的，比如注册中心推送变更。</li>
</ul>
</li>
<li>路由
<ul>
<li><a href="https://github.com/alibaba/dubbo/blob/4bbc0ddddacc915ddc8ff292dd28745bbc0031fd/dubbo-cluster/src/main/java/com/alibaba/dubbo/rpc/cluster/Router.java" target="_blank" rel="external nofollow noopener noreferrer"><code>com.alibaba.dubbo.rpc.cluster.Router</code></a>&nbsp;接口 +&nbsp;<code>com.alibaba.dubbo.rpc.cluster.router</code>&nbsp;包。</li>
<li>负责从多个&nbsp;<code>Invoker</code>&nbsp;中按路由规则选出子集，比如读写分离，应用隔离等。</li>
<li>拓展参见&nbsp;<a href="http://dubbo.apache.org/zh-cn/docs/user/demos/routing-rule.html" target="_blank" rel="external nofollow noopener noreferrer">《Dubbo 用户指南 &mdash;&mdash; 路由规则》</a>&nbsp;和&nbsp;<a href="http://dubbo.apache.org/zh-cn/docs/dev/impls/router.html" target="_blank" rel="external nofollow noopener noreferrer">《Dubbo 开发指南 &mdash;&mdash; 路由拓展》</a>&nbsp;文档。</li>
</ul>
</li>
<li>配置
<ul>
<li><a href="https://github.com/alibaba/dubbo/blob/4bbc0ddddacc915ddc8ff292dd28745bbc0031fd/dubbo-cluster/src/main/java/com/alibaba/dubbo/rpc/cluster/Configurator.java" target="_blank" rel="external nofollow noopener noreferrer"><code>com.alibaba.dubbo.rpc.cluster.Configurator</code></a>&nbsp;接口 +&nbsp;<code>com.alibaba.dubbo.rpc.cluster.configurator</code>&nbsp;包。</li>
<li>拓展参见&nbsp;<a href="http://dubbo.apache.org/zh-cn/docs/user/demos/config-rule.html" target="_blank" rel="external nofollow noopener noreferrer">《Dubbo 用户指南 &mdash;&mdash; 配置规则》</a>&nbsp;文档。</li>
</ul>
</li>
<li>负载均衡
<ul>
<li><a href="https://github.com/alibaba/dubbo/blob/4bbc0ddddacc915ddc8ff292dd28745bbc0031fd/dubbo-cluster/src/main/java/com/alibaba/dubbo/rpc/cluster/LoadBalance.java" target="_blank" rel="external nofollow noopener noreferrer"><code>com.alibaba.dubbo.rpc.cluster.LoadBalance</code></a>&nbsp;接口 +&nbsp;<code>com.alibaba.dubbo.rpc.cluster.loadbalance</code>&nbsp;包。</li>
<li>LoadBalance 负责从多个 Invoker 中选出具体的一个用于本次调用，选的过程包含了负载均衡算法，调用失败后，需要重选。</li>
<li>拓展参见&nbsp;<a href="http://dubbo.apache.org/zh-cn/docs/user/demos/loadbalance.html" target="_blank" rel="external nofollow noopener noreferrer">《Dubbo 用户指南 &mdash;&mdash; 负载均衡》</a>&nbsp;和&nbsp;<a href="http://dubbo.apache.org/zh-cn/docs/dev/impls/load-balance.html" target="_blank" rel="external nofollow noopener noreferrer">《Dubbo 开发指南 &mdash;&mdash; 负载均衡拓展》</a>&nbsp;文档。</li>
</ul>
</li>
<li>合并结果
<ul>
<li><a href="https://github.com/alibaba/dubbo/blob/4bbc0ddddacc915ddc8ff292dd28745bbc0031fd/dubbo-cluster/src/main/java/com/alibaba/dubbo/rpc/cluster/Merger.java" target="_blank" rel="external nofollow noopener noreferrer"><code>com.alibaba.dubbo.rpc.cluster.Merger</code></a>&nbsp;接口 +&nbsp;<code>com.alibaba.dubbo.rpc.cluster.merger</code>&nbsp;包。</li>
<li>合并返回结果，用于分组聚合。</li>
<li>拓展参见&nbsp;<a href="http://dubbo.apache.org/zh-cn/docs/user/demos/group-merger.html" target="_blank" rel="external nofollow noopener noreferrer">《Dubbo 用户指南 &mdash;&mdash; 分组聚合》</a>&nbsp;和&nbsp;<a href="http://dubbo.apache.org/zh-cn/docs/dev/impls/merger.html" target="_blank" rel="external nofollow noopener noreferrer">《Dubbo 开发指南 &mdash;&mdash; 合并结果扩展》</a>&nbsp;文档。</li>
</ul>
</li>
</ul>
<p>整体流程如下：</p>
<blockquote>
<p><img src="http://static2.iocoder.cn/images/Dubbo/2018_01_04/09.png" alt="集群容错" /></p>
</blockquote>
<h2 id="3-5-dubbo-registry">3.5 dubbo-registry</h2>
<blockquote>
<p><a href="https://github.com/alibaba/dubbo/tree/4bbc0ddddacc915ddc8ff292dd28745bbc0031fd/dubbo-registry" target="_blank" rel="external nofollow noopener noreferrer"><code>dubbo-registry</code></a>&nbsp;<strong>注册中心模块</strong>：基于注册中心下发地址的集群方式，以及对各种注册中心的抽象。</p>
</blockquote>
<p><img src="http://static2.iocoder.cn/images/Dubbo/2018_01_04/10.png" alt="dubbo-registry 包结构" /></p>
<ul>
<li><code>dubbo-registry-api</code>&nbsp;，<strong>抽象</strong>注册中心的注册与发现接口。</li>
<li>其他模块，实现&nbsp;<code>dubbo-registry-api</code>&nbsp;，提供对应的注册中心实现。在&nbsp;<a href="http://dubbo.apache.org/zh-cn/docs/user/references/registry/introduction.html" target="_blank" rel="external nofollow noopener noreferrer">《用户指南 &mdash;&mdash; 注册中心参考手册》</a>&nbsp;中，可以看到每种注册中心的介绍。</li>
<li>另外，<code>dubbo-registry-default</code>&nbsp;对应 Simple 注册中心。</li>
<li>拓展参见&nbsp;<a href="http://dubbo.apache.org/zh-cn/docs/dev/impls/registry.html" target="_blank" rel="external nofollow noopener noreferrer">《Dubbo 开发指南 &mdash;&mdash; 注册中心扩展》</a>&nbsp;文档。</li>
</ul>
<h2 id="3-6-dubbo-monitor">3.6 dubbo-monitor</h2>
<blockquote>
<p><a href="https://github.com/alibaba/dubbo/tree/4bbc0ddddacc915ddc8ff292dd28745bbc0031fd/dubbo-monitor" target="_blank" rel="external nofollow noopener noreferrer"><code>dubbo-monitor</code></a>&nbsp;<strong>监控模块</strong>：统计服务调用次数，调用时间的，调用链跟踪的服务。</p>
</blockquote>
<p><img src="http://static2.iocoder.cn/images/Dubbo/2018_01_04/11.png" alt="dubbo-monitor 包结构" /></p>
<ul>
<li>拓展参见&nbsp;<a href="http://dubbo.apache.org/zh-cn/docs/dev/impls/monitor.html" target="_blank" rel="external nofollow noopener noreferrer">《Dubbo 开发指南 &mdash;&mdash; 监控中心扩展》</a>&nbsp;。</li>
</ul>
<p>目前社区里，有对 Dubbo 监控中心进行重构的项目，例如 ：</p>
<ul>
<li><a href="https://github.com/handuyishe/dubbo-monitor" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/handuyishe/dubbo-monitor</a></li>
<li><a href="https://github.com/zhongxig/dubbo-d-monitor" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/zhongxig/dubbo-d-monitor</a></li>
</ul>
<h2 id="3-7-dubbo-config">3.7 dubbo-config</h2>
<blockquote>
<p><a href="https://github.com/alibaba/dubbo/tree/4bbc0ddddacc915ddc8ff292dd28745bbc0031fd/dubbo-config" target="_blank" rel="external nofollow noopener noreferrer"><code>dubbo-config</code></a>&nbsp;<strong>配置模块</strong>：是 Dubbo 对外的 API，用户通过 Config 使用Dubbo，隐藏 Dubbo 所有细节。</p>
</blockquote>
<p><img src="http://static2.iocoder.cn/images/Dubbo/2018_01_04/12.png" alt="dubbo-config 包结构" /></p>
<ul>
<li><code>dubbo-config-api</code>&nbsp;，实现了&nbsp;<a href="http://dubbo.apache.org/zh-cn/docs/user/configuration/api.html" target="_blank" rel="external nofollow noopener noreferrer">API 配置</a>&nbsp;和&nbsp;<a href="http://dubbo.apache.org/zh-cn/docs/user/configuration/properties.html" target="_blank" rel="external nofollow noopener noreferrer">属性配置</a>&nbsp;功能。</li>
<li><code>dubbo-config-spring</code>&nbsp;，实现了&nbsp;<a href="http://dubbo.apache.org/zh-cn/docs/user/configuration/xml.html" target="_blank" rel="external nofollow noopener noreferrer">XML 配置</a>&nbsp;和&nbsp;<a href="http://dubbo.apache.org/zh-cn/docs/user/configuration/annotation.html" target="_blank" rel="external nofollow noopener noreferrer">注解配置</a>&nbsp;功能。</li>
</ul>
<p>推荐阅读&nbsp;<a href="http://dubbo.apache.org/zh-cn/docs/dev/principals/configuration.html" target="_blank" rel="external nofollow noopener noreferrer">《Dubbo 开发指南 &mdash;&mdash; 配置设计》</a>&nbsp;。</p>
<h2 id="3-8-dubbo-container">3.8 dubbo-container</h2>
<blockquote>
<p><a href="https://github.com/alibaba/dubbo/tree/4bbc0ddddacc915ddc8ff292dd28745bbc0031fd/dubbo-container" target="_blank" rel="external nofollow noopener noreferrer"><code>dubbo-container</code></a>&nbsp;<strong>容器模块</strong>：是一个 Standlone 的容器，以简单的 Main 加载 Spring 启动，因为服务通常不需要 Tomcat/JBoss 等 Web 容器的特性，没必要用 Web 容器去加载服务。</p>
</blockquote>
<p><img src="http://static2.iocoder.cn/images/Dubbo/2018_01_04/13.png" alt="dubbo-container 包结构" /></p>
<ul>
<li><code>dubbo-container-api</code>&nbsp;：定义了&nbsp;<a href="https://github.com/alibaba/dubbo/blob/4bbc0ddddacc915ddc8ff292dd28745bbc0031fd/dubbo-container/dubbo-container-api/src/main/java/com/alibaba/dubbo/container/Container.java" target="_blank" rel="external nofollow noopener noreferrer"><code>com.alibaba.dubbo.container.Container</code></a>&nbsp;接口，并提供 加载所有容器启动的 Main 类。</li>
<li>实现&nbsp;<code>dubbo-container-api</code>
<ul>
<li><code>dubbo-container-spring</code>&nbsp;，提供了&nbsp;<code>com.alibaba.dubbo.container.spring.SpringContainer</code>&nbsp;。</li>
<li><code>dubbo-container-log4j</code>&nbsp;，提供了&nbsp;<code>com.alibaba.dubbo.container.log4j.Log4jContainer</code>&nbsp;。</li>
<li><code>dubbo-container-logback</code>&nbsp;，提供了&nbsp;<code>com.alibaba.dubbo.container.logback.LogbackContainer</code>&nbsp;。</li>
</ul>
</li>
<li>拓展参考&nbsp;<a href="http://dubbo.apache.org/zh-cn/docs/user/demos/service-container.html" target="_blank" rel="external nofollow noopener noreferrer">《Dubbo 用户指南 &mdash;&mdash; 服务容器》</a>&nbsp;和&nbsp;<a href="http://dubbo.apache.org/zh-cn/docs/dev/impls/container.html" target="_blank" rel="external nofollow noopener noreferrer">《Dubbo 开发指南 &mdash;&mdash; 容器扩展》</a>&nbsp;文档。</li>
</ul>
<h2 id="3-9-dubbo-filter">3.9 dubbo-filter</h2>
<p><a href="https://github.com/alibaba/dubbo/tree/4bbc0ddddacc915ddc8ff292dd28745bbc0031fd/dubbo-filter" target="_blank" rel="external nofollow noopener noreferrer"><code>dubbo-filter</code></a>&nbsp;<strong>过滤器模块</strong>：提供了<strong>内置</strong>的过滤器。</p>
<p><img src="http://static2.iocoder.cn/images/Dubbo/2018_01_04/14.png" alt="dubbo-filter 包结构" /></p>
<ul>
<li><code>dubbo-filter-cache</code>&nbsp;，缓存过滤器。
<ul>
<li>拓展参考&nbsp;<a href="http://dubbo.apache.org/zh-cn/docs/user/demos/result-cache.html" target="_blank" rel="external nofollow noopener noreferrer">《Dubbo 用户指南 &mdash;&mdash; 结果缓存》</a>&nbsp;和&nbsp;<a href="http://dubbo.apache.org/zh-cn/docs/dev/impls/cache.html" target="_blank" rel="external nofollow noopener noreferrer">《Dubbo 开发指南 &mdash;&mdash; 缓存拓展》</a>&nbsp;文档。</li>
</ul>
</li>
<li><code>dubbo-filter-validation</code>&nbsp;，参数验证过滤器。
<ul>
<li>拓展参考&nbsp;<a href="http://dubbo.apache.org/zh-cn/docs/user/demos/parameter-validation.html" target="_blank" rel="external nofollow noopener noreferrer">《Dubbo 用户指南 &mdash;&mdash; 参数验证》</a>&nbsp;和&nbsp;<a href="http://dubbo.apache.org/zh-cn/docs/dev/impls/validation.html" target="_blank" rel="external nofollow noopener noreferrer">《Dubbo 开发指南 &mdash;&mdash; 验证扩展》</a>&nbsp;文档。</li>
</ul>
</li>
</ul>
<h2 id="3-10-dubbo-plugin">3.10 dubbo-plugin</h2>
<p><a href="https://github.com/alibaba/dubbo/tree/4bbc0ddddacc915ddc8ff292dd28745bbc0031fd/dubbo-plugin" target="_blank" rel="external nofollow noopener noreferrer"><code>dubbo-plugin</code></a>&nbsp;<strong>插件模块</strong>：提供了<strong>内置</strong>的插件。</p>
<p><img src="http://static2.iocoder.cn/images/Dubbo/2018_01_04/15.png" alt="dubbo-plugin 包结构" /></p>
<ul>
<li><code>dubbo-qos</code>&nbsp;，提供在线运维命令。
<ul>
<li>拓展参考&nbsp;<a href="http://dubbo.apache.org/zh-cn/docs/user/references/qos.html" target="_blank" rel="external nofollow noopener noreferrer">《Dubbo 用户指南 &mdash;&mdash; 新版本 telnet 命令使用说明》</a>&nbsp;和&nbsp;<a href="http://dubbo.apache.org/zh-cn/docs/dev/impls/telnet-handler.html" target="_blank" rel="external nofollow noopener noreferrer">《Dubbo 开发指南 &mdash;&mdash; Telnet 命令扩展》</a>&nbsp;文档。</li>
</ul>
</li>
</ul>
<h2 id="3-11-hessian-lite">3.11 hessian-lite</h2>
<p><a href="https://github.com/alibaba/dubbo/tree/4bbc0ddddacc915ddc8ff292dd28745bbc0031fd/hessian-lite" target="_blank" rel="external nofollow noopener noreferrer"><code>hessian-lite</code></a>&nbsp;：Dubbo 对&nbsp;<a href="http://hessian.caucho.com/" target="_blank" rel="external nofollow noopener noreferrer">Hessian 2</a>&nbsp;的&nbsp;<strong>序列化</strong>&nbsp;部分的精简、改进、BugFix 。</p>
<p>提交历史如下：</p>
<p><img src="http://static2.iocoder.cn/images/Dubbo/2018_01_04/23.png" alt="hessian-lite 提交历史" /></p>
<h2 id="3-12-dubbo-demo">3.12 dubbo-demo</h2>
<p><a href="https://github.com/alibaba/dubbo/tree/4bbc0ddddacc915ddc8ff292dd28745bbc0031fd/dubbo-plugin" target="_blank" rel="external nofollow noopener noreferrer"><code>dubbo-demo</code></a>&nbsp;<strong>快速启动示例</strong>。</p>
<p>参见&nbsp;<a href="http://dubbo.apache.org/zh-cn/docs/user/quick-start.html" target="_blank" rel="external nofollow noopener noreferrer">《Dubbo 用户指南 &mdash;&mdash; 快速启动》</a>&nbsp;文档。</p>
<h2 id="3-13-dubbo-test">3.13 dubbo-test</h2>
<p><a href="https://github.com/alibaba/dubbo/tree/4bbc0ddddacc915ddc8ff292dd28745bbc0031fd/dubbo-test" target="_blank" rel="external nofollow noopener noreferrer"><code>dubbo-test</code></a>&nbsp;<strong>测试模块</strong>。</p>
<p><img src="http://static2.iocoder.cn/images/Dubbo/2018_01_04/16.png" alt="dubbo-test 包结构" /></p>
<ul>
<li><code>dubbo-test-benchmark</code>&nbsp;，性能测试。
<ul>
<li>参考&nbsp;<a href="http://dubbo.apache.org/zh-cn/docs/user/perf-test.html" target="_blank" rel="external nofollow noopener noreferrer">《Dubbo 用户指南 &mdash;&mdash; 性能测试报告》</a>&nbsp;文档。</li>
</ul>
</li>
<li><code>dubbo-test-compatibility</code>&nbsp;，兼容性测试。
<ul>
<li><code>dubbo-test-spring3</code>&nbsp;，测试对 Spring 3 的兼容性。</li>
</ul>
</li>
<li><code>dubbo-test-example</code>&nbsp;，<strong>使用示例</strong>。</li>
</ul>
<h2 id="3-14-Maven-POM">3.14 Maven POM</h2>
<h3 id="3-14-1-dubbo-dependencies-bom">3.14.1 dubbo-dependencies-bom</h3>
<p><a href="https://github.com/alibaba/dubbo/blob/4bbc0ddddacc915ddc8ff292dd28745bbc0031fd/dependencies-bom/pom.xml" target="_blank" rel="external nofollow noopener noreferrer"><code>dubbo-dependencies-bom/pom.xml</code></a>&nbsp;，Maven BOM(Bill Of Materials) ，<strong>统一</strong>定义了 Dubbo 依赖的三方库的版本号：</p>
<p><img src="http://static2.iocoder.cn/images/Dubbo/2018_01_04/17.png" alt="dubbo-dependencies-bom 文件" /></p>
<hr />
<p><code>dubbo-parent</code>&nbsp;会引入该 BOM ：</p>
<p><img src="http://static2.iocoder.cn/images/Dubbo/2018_01_04/18.png" alt="引入 dubbo-dependencies-bom 文件" /></p>
<hr />
<p>更多 Maven BOM 的知识，可以看下&nbsp;<a href="http://blog.csdn.net/fanxiaobin577328725/article/details/66974896" target="_blank" rel="external nofollow noopener noreferrer">《Maven 与Spring BOM(Bill Of Materials)简化Spring版本控制》</a>&nbsp;文档：</p>
<blockquote>
<p>通俗解说：<br />为了防止用 Maven 管理 Spring 项目时，不同的项目依赖了不同版本的 Spring ，可以使用 Maven BOM 来解决者一问题。</p>
</blockquote>
<h3 id="3-14-2-dubbo-bom">3.14.2 dubbo-bom</h3>
<p><a href="https://github.com/alibaba/dubbo/blob/4bbc0ddddacc915ddc8ff292dd28745bbc0031fd/bom/pom.xml" target="_blank" rel="external nofollow noopener noreferrer"><code>dubbo-bom/pom.xml</code></a>&nbsp;，Maven BOM(Bill Of Materials) ，<strong>统一</strong>定义了 Dubbo 的版本号：</p>
<p><img src="http://static2.iocoder.cn/images/Dubbo/2018_01_04/19.png" alt="dubbo-bom 文件" /></p>
<hr />
<p><code>dubbo-demo</code>&nbsp;和&nbsp;<code>dubbo-test</code>&nbsp;会引入该 BOM 。以&nbsp;<code>dubbo-demo</code>&nbsp;举例子：</p>
<p><img src="http://static2.iocoder.cn/images/Dubbo/2018_01_04/20.png" alt="引入 dubbo-bom 文件" /></p>
<h3 id="3-14-3-dubbo-parent">3.14.3 dubbo-parent</h3>
<p><a href="https://github.com/alibaba/dubbo/blob/4bbc0ddddacc915ddc8ff292dd28745bbc0031fd/pom.xml" target="_blank" rel="external nofollow noopener noreferrer"><code>dubbo/pom.xml</code></a>&nbsp;，Dubbo Parent Pom 。</p>
<p>Dubbo 的 Maven 模块，都会引入该 pom 文件。以&nbsp;<code>dubbo-cluster</code>&nbsp;举例子：</p>
<p><img src="http://static2.iocoder.cn/images/Dubbo/2018_01_04/21.png" alt="引入 dubbo-parent 文件" /></p>
<hr />
<p>我们整理下上面的 pom 文件：</p>
<p><img src="http://static2.iocoder.cn/images/Dubbo/2018_01_04/22.png" alt="引入关系" /></p>
<h3 id="3-14-4-dubbo-all">3.14.4 dubbo-all</h3>
<p><a href="https://github.com/alibaba/dubbo/blob/4bbc0ddddacc915ddc8ff292dd28745bbc0031fd/all/pom.xml" target="_blank" rel="external nofollow noopener noreferrer"><code>dubbo/all/pom.xml</code></a>&nbsp;，Dubbo All Pom ，定义了 Dubbo 的<strong>打包脚本</strong>。</p>
<p>我们在使用 Dubbo 库时，引入该 pom 文件。</p>
</div>