<h2><a id="cb_post_title_url" href="https://www.cnblogs.com/ritchiewang/p/5767387.html">决策树剪枝算法</a></h2>
<div id="cnblogs_post_body" class="blogpost-body">
<div class="markdown_views">
<blockquote>
<p><strong>算法目的</strong>：决策树的剪枝是为了简化决策树模型，避免过拟合。</p>
<p><strong>算法基本思路</strong>：减去决策树模型中的一些子树或者叶结点，并将其根结点作为新的叶结点，从而实现模型的简化。</p>
<p><strong>模型损失函数</strong>&nbsp;<br />1. 变量预定义：|T|表示树T的叶节点个数，t表示树T的叶节点，同时，<span id="MathJax-Element-3493-Frame" class="MathJax" role="textbox" aria-readonly="true"><span id="MathJax-Span-48522" class="math"><span id="MathJax-Span-48523" class="mrow"><span id="MathJax-Span-48524" class="msubsup"><span id="MathJax-Span-48525" class="mi">N</span><span id="MathJax-Span-48526" class="mi">t</span></span></span></span></span>表示该叶节点的样本点个数，其中属于k类的样本点有<span id="MathJax-Element-3494-Frame" class="MathJax" role="textbox" aria-readonly="true"><span id="MathJax-Span-48527" class="math"><span id="MathJax-Span-48528" class="mrow"><span id="MathJax-Span-48529" class="msubsup"><span id="MathJax-Span-48530" class="mi">N</span><span id="MathJax-Span-48531" class="texatom"><span id="MathJax-Span-48532" class="mrow"><span id="MathJax-Span-48533" class="mi">t</span><span id="MathJax-Span-48534" class="mi">k</span></span></span></span></span></span></span>个，K表示类别的个数，<span id="MathJax-Element-3495-Frame" class="MathJax" role="textbox" aria-readonly="true"><span id="MathJax-Span-48535" class="math"><span id="MathJax-Span-48536" class="mrow"><span id="MathJax-Span-48537" class="msubsup"><span id="MathJax-Span-48538" class="mi">H</span><span id="MathJax-Span-48539" class="mi">t</span></span><span id="MathJax-Span-48540" class="mo">(</span><span id="MathJax-Span-48541" class="mi">T</span><span id="MathJax-Span-48542" class="mo">)</span></span></span></span>为叶结点t上的经验熵，<span id="MathJax-Element-3496-Frame" class="MathJax" role="textbox" aria-readonly="true"><span id="MathJax-Span-48543" class="math"><span id="MathJax-Span-48544" class="mrow"><span id="MathJax-Span-48545" class="mi">&alpha;</span><span id="MathJax-Span-48546" class="mo">&ge;</span><span id="MathJax-Span-48547" class="mn">0</span></span></span></span>为参数&nbsp;<br />2. 损失函数：<span id="MathJax-Element-3497-Frame" class="MathJax" role="textbox" aria-readonly="true"><span id="MathJax-Span-48548" class="math"><span id="MathJax-Span-48549" class="mrow"><span id="MathJax-Span-48550" class="msubsup"><span id="MathJax-Span-48551" class="mi">C</span><span id="MathJax-Span-48552" class="mi">a</span></span><span id="MathJax-Span-48553" class="mo">(</span><span id="MathJax-Span-48554" class="mi">T</span><span id="MathJax-Span-48555" class="mo">)</span><span id="MathJax-Span-48556" class="mo">=</span><span id="MathJax-Span-48557" class="mstyle"><span id="MathJax-Span-48558" class="mrow"><span id="MathJax-Span-48559" class="munderover"><span id="MathJax-Span-48560" class="mo">&sum;</span><span id="MathJax-Span-48561" class="texatom"><span id="MathJax-Span-48562" class="mrow"><span id="MathJax-Span-48563" class="mi">t</span><span id="MathJax-Span-48564" class="mo">=</span><span id="MathJax-Span-48565" class="mn">1</span></span></span><span id="MathJax-Span-48566" class="texatom"><span id="MathJax-Span-48567" class="mrow"><span id="MathJax-Span-48568" class="texatom"><span id="MathJax-Span-48569" class="mrow"><span id="MathJax-Span-48570" class="mo">|</span></span></span><span id="MathJax-Span-48571" class="mi">T</span><span id="MathJax-Span-48572" class="texatom"><span id="MathJax-Span-48573" class="mrow"><span id="MathJax-Span-48574" class="mo">|</span></span></span></span></span></span><span id="MathJax-Span-48575" class="texatom"><span id="MathJax-Span-48576" class="mrow"><span id="MathJax-Span-48577" class="msubsup"><span id="MathJax-Span-48578" class="mi">N</span><span id="MathJax-Span-48579" class="mi">t</span></span><span id="MathJax-Span-48580" class="msubsup"><span id="MathJax-Span-48581" class="mi">H</span><span id="MathJax-Span-48582" class="mi">t</span></span><span id="MathJax-Span-48583" class="mo">(</span><span id="MathJax-Span-48584" class="mi">T</span><span id="MathJax-Span-48585" class="mo">)</span><span id="MathJax-Span-48586" class="mo">+</span><span id="MathJax-Span-48587" class="mi">&alpha;</span><span id="MathJax-Span-48588" class="texatom"><span id="MathJax-Span-48589" class="mrow"><span id="MathJax-Span-48590" class="mo">|</span></span></span><span id="MathJax-Span-48591" class="mi">T</span><span id="MathJax-Span-48592" class="texatom"><span id="MathJax-Span-48593" class="mrow"><span id="MathJax-Span-48594" class="mo">|</span></span></span></span></span></span></span></span></span></span>&nbsp;<br />3. 简化表示：<span id="MathJax-Element-3498-Frame" class="MathJax" role="textbox" aria-readonly="true"><span id="MathJax-Span-48595" class="math"><span id="MathJax-Span-48596" class="mrow"><span id="MathJax-Span-48597" class="mi">C</span><span id="MathJax-Span-48598" class="mo">(</span><span id="MathJax-Span-48599" class="mi">T</span><span id="MathJax-Span-48600" class="mo">)</span><span id="MathJax-Span-48601" class="mo">=</span><span id="MathJax-Span-48602" class="mstyle"><span id="MathJax-Span-48603" class="mrow"><span id="MathJax-Span-48604" class="munderover"><span id="MathJax-Span-48605" class="mo">&sum;</span><span id="MathJax-Span-48606" class="texatom"><span id="MathJax-Span-48607" class="mrow"><span id="MathJax-Span-48608" class="mi">t</span><span id="MathJax-Span-48609" class="mo">=</span><span id="MathJax-Span-48610" class="mn">1</span></span></span><span id="MathJax-Span-48611" class="texatom"><span id="MathJax-Span-48612" class="mrow"><span id="MathJax-Span-48613" class="texatom"><span id="MathJax-Span-48614" class="mrow"><span id="MathJax-Span-48615" class="mo">|</span></span></span><span id="MathJax-Span-48616" class="mi">T</span><span id="MathJax-Span-48617" class="texatom"><span id="MathJax-Span-48618" class="mrow"><span id="MathJax-Span-48619" class="mo">|</span></span></span></span></span></span><span id="MathJax-Span-48620" class="texatom"><span id="MathJax-Span-48621" class="mrow"><span id="MathJax-Span-48622" class="msubsup"><span id="MathJax-Span-48623" class="mi">N</span><span id="MathJax-Span-48624" class="mi">t</span></span><span id="MathJax-Span-48625" class="msubsup"><span id="MathJax-Span-48626" class="mi">H</span><span id="MathJax-Span-48627" class="mi">t</span></span><span id="MathJax-Span-48628" class="mo">(</span><span id="MathJax-Span-48629" class="mi">T</span><span id="MathJax-Span-48630" class="mo">)</span></span></span></span></span></span></span></span>&nbsp;<br />4. 经验熵：<span id="MathJax-Element-3499-Frame" class="MathJax" role="textbox" aria-readonly="true"><span id="MathJax-Span-48631" class="math"><span id="MathJax-Span-48632" class="mrow"><span id="MathJax-Span-48633" class="msubsup"><span id="MathJax-Span-48634" class="mi">H</span><span id="MathJax-Span-48635" class="mi">t</span></span><span id="MathJax-Span-48636" class="mo">(</span><span id="MathJax-Span-48637" class="mi">T</span><span id="MathJax-Span-48638" class="mo">)</span><span id="MathJax-Span-48639" class="mo">=</span><span id="MathJax-Span-48640" class="mo">&minus;</span><span id="MathJax-Span-48641" class="mstyle"><span id="MathJax-Span-48642" class="mrow"><span id="MathJax-Span-48643" class="munderover"><span id="MathJax-Span-48644" class="mo">&sum;</span><span id="MathJax-Span-48645" class="mi">k</span><span id="MathJax-Span-48646" class="mi">K</span></span><span id="MathJax-Span-48647" class="mfrac"><span id="MathJax-Span-48648" class="msubsup"><span id="MathJax-Span-48649" class="mi">N</span><span id="MathJax-Span-48650" class="texatom"><span id="MathJax-Span-48651" class="mrow"><span id="MathJax-Span-48652" class="mi">t</span><span id="MathJax-Span-48653" class="mi">k</span></span></span></span><span id="MathJax-Span-48654" class="msubsup"><span id="MathJax-Span-48655" class="mi">N</span><span id="MathJax-Span-48656" class="mi">t</span></span></span><span id="MathJax-Span-48657" class="mi">log</span><span id="MathJax-Span-48658" class="mo"></span><span id="MathJax-Span-48659" class="mfrac"><span id="MathJax-Span-48660" class="msubsup"><span id="MathJax-Span-48661" class="mi">N</span><span id="MathJax-Span-48662" class="texatom"><span id="MathJax-Span-48663" class="mrow"><span id="MathJax-Span-48664" class="mi">t</span><span id="MathJax-Span-48665" class="mi">k</span></span></span></span><span id="MathJax-Span-48666" class="msubsup"><span id="MathJax-Span-48667" class="mi">N</span><span id="MathJax-Span-48668" class="mi">t</span></span></span></span></span></span></span></span></p>
<blockquote>
<p>损失函数简化形式：<span id="MathJax-Element-3500-Frame" class="MathJax" role="textbox" aria-readonly="true"><span id="MathJax-Span-48669" class="math"><span id="MathJax-Span-48670" class="mrow"><span id="MathJax-Span-48671" class="msubsup"><span id="MathJax-Span-48672" class="mi">C</span><span id="MathJax-Span-48673" class="mi">a</span></span><span id="MathJax-Span-48674" class="mo">(</span><span id="MathJax-Span-48675" class="mi">T</span><span id="MathJax-Span-48676" class="mo">)</span><span id="MathJax-Span-48677" class="mo">=</span><span id="MathJax-Span-48678" class="mi">C</span><span id="MathJax-Span-48679" class="mo">(</span><span id="MathJax-Span-48680" class="mi">T</span><span id="MathJax-Span-48681" class="mo">)</span><span id="MathJax-Span-48682" class="mo">+</span><span id="MathJax-Span-48683" class="mi">&alpha;</span><span id="MathJax-Span-48684" class="texatom"><span id="MathJax-Span-48685" class="mrow"><span id="MathJax-Span-48686" class="mo">|</span></span></span><span id="MathJax-Span-48687" class="mi">T</span><span id="MathJax-Span-48688" class="texatom"><span id="MathJax-Span-48689" class="mrow"><span id="MathJax-Span-48690" class="mo">|</span></span></span></span></span></span></p>
</blockquote>
<p>这里的经验熵反应了一个叶结点中的分类结果的混乱程度，经验熵越大，说明该叶节点所对应的分类结果越混乱，也就是说分类结果中包含了较多的类别，表明该分支的分类效果较差。所以，损失函数越大，说明模型的分类效果越差。&nbsp;<br />决策树的剪枝通常分为两种，即预剪枝、后剪枝。&nbsp;<br />预剪枝是在决策树生成过程中，对树进行剪枝，提前结束树的分支生长。&nbsp;<br />后剪枝是在决策树生长完成之后，对树进行剪枝，得到简化版的决策树。&nbsp;<br />下面的算法，是<strong>后剪枝</strong>的实现步骤。</p>
</blockquote>
<h3 id="算法步骤">算法步骤：</h3>
<blockquote>
<p>输入：生成算法产生的整个树T，参数<span id="MathJax-Element-2869-Frame" class="MathJax" role="textbox" aria-readonly="true"><span id="MathJax-Span-35447" class="math"><span id="MathJax-Span-35448" class="mrow"><span id="MathJax-Span-35449" class="mi">&alpha;</span></span></span></span>&nbsp;<br />输出：修剪后的子树<span id="MathJax-Element-2870-Frame" class="MathJax" role="textbox" aria-readonly="true"><span id="MathJax-Span-35450" class="math"><span id="MathJax-Span-35451" class="mrow"><span id="MathJax-Span-35452" class="msubsup"><span id="MathJax-Span-35453" class="mi">T</span><span id="MathJax-Span-35454" class="mi">&alpha;</span></span></span></span></span>&nbsp;<br />1. 计算每个结点的经验熵&nbsp;<br />2. 递归地从树的叶结点向上回缩&nbsp;<br />设一组叶结点回缩到父结点之前与之后的整体树分别为<span id="MathJax-Element-2871-Frame" class="MathJax" role="textbox" aria-readonly="true"><span id="MathJax-Span-35455" class="math"><span id="MathJax-Span-35456" class="mrow"><span id="MathJax-Span-35457" class="msubsup"><span id="MathJax-Span-35458" class="mi">T</span><span id="MathJax-Span-35459" class="mi">B</span></span></span></span></span>和<span id="MathJax-Element-2872-Frame" class="MathJax" role="textbox" aria-readonly="true"><span id="MathJax-Span-35460" class="math"><span id="MathJax-Span-35461" class="mrow"><span id="MathJax-Span-35462" class="msubsup"><span id="MathJax-Span-35463" class="mi">T</span><span id="MathJax-Span-35464" class="mi">A</span></span></span></span></span>，其对应的损失函数值分别是<span id="MathJax-Element-2873-Frame" class="MathJax" role="textbox" aria-readonly="true"><span id="MathJax-Span-35465" class="math"><span id="MathJax-Span-35466" class="mrow"><span id="MathJax-Span-35467" class="msubsup"><span id="MathJax-Span-35468" class="mi">C</span><span id="MathJax-Span-35469" class="mi">&alpha;</span></span><span id="MathJax-Span-35470" class="mo">(</span><span id="MathJax-Span-35471" class="msubsup"><span id="MathJax-Span-35472" class="mi">T</span><span id="MathJax-Span-35473" class="mi">B</span></span><span id="MathJax-Span-35474" class="mo">)</span></span></span></span>与<span id="MathJax-Element-2874-Frame" class="MathJax" role="textbox" aria-readonly="true"><span id="MathJax-Span-35475" class="math"><span id="MathJax-Span-35476" class="mrow"><span id="MathJax-Span-35477" class="msubsup"><span id="MathJax-Span-35478" class="mi">C</span><span id="MathJax-Span-35479" class="mi">&alpha;</span></span><span id="MathJax-Span-35480" class="mo">(</span><span id="MathJax-Span-35481" class="msubsup"><span id="MathJax-Span-35482" class="mi">T</span><span id="MathJax-Span-35483" class="mi">A</span></span><span id="MathJax-Span-35484" class="mo">)</span></span></span></span>，如果<span id="MathJax-Element-2875-Frame" class="MathJax" role="textbox" aria-readonly="true"><span id="MathJax-Span-35485" class="math"><span id="MathJax-Span-35486" class="mrow"><span id="MathJax-Span-35487" class="msubsup"><span id="MathJax-Span-35488" class="mi">C</span><span id="MathJax-Span-35489" class="mi">&alpha;</span></span><span id="MathJax-Span-35490" class="mo">(</span><span id="MathJax-Span-35491" class="msubsup"><span id="MathJax-Span-35492" class="mi">T</span><span id="MathJax-Span-35493" class="mi">A</span></span><span id="MathJax-Span-35494" class="mo">)</span><span id="MathJax-Span-35495" class="mo">&le;</span><span id="MathJax-Span-35496" class="msubsup"><span id="MathJax-Span-35497" class="mi">C</span><span id="MathJax-Span-35498" class="mi">&alpha;</span></span><span id="MathJax-Span-35499" class="mo">(</span><span id="MathJax-Span-35500" class="msubsup"><span id="MathJax-Span-35501" class="mi">T</span><span id="MathJax-Span-35502" class="mi">B</span></span><span id="MathJax-Span-35503" class="mo">)</span></span></span></span>，即如果进行剪枝，损失函数变小，就进行剪枝，将父结点变为新的叶结点&nbsp;<br />3. 返回(2)，直至不能继续为止，得到损失函数最小的子树<span id="MathJax-Element-2876-Frame" class="MathJax" role="textbox" aria-readonly="true"><span id="MathJax-Span-35504" class="math"><span id="MathJax-Span-35505" class="mrow"><span id="MathJax-Span-35506" class="msubsup"><span id="MathJax-Span-35507" class="mi">T</span><span id="MathJax-Span-35508" class="mi">&alpha;</span></span></span></span></span></p>
</blockquote>
</div>
</div>